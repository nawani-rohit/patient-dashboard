{"ast":null,"code":"var _jsxFileName = \"/Users/rohitnawani/Desktop/PatientDashboardProject/my-patient-dashboard/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\nimport { Chart, registerables } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nfunction App() {\n  _s();\n  const [patient, setPatient] = useState(null);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    // Replace with the actual API endpoint from the Coalition Technologies Patient Data API\n    const apiEndpoint = 'https://api.example.com/patients';\n    fetch(apiEndpoint).then(response => {\n      if (!response.ok) {\n        throw new Error(`Network response was not ok: ${response.statusText}`);\n      }\n      return response.json();\n    }).then(data => {\n      // Filter to get only Jessica Taylor's data\n      const jessica = data.find(p => p.name === 'Jessica Taylor');\n      setPatient(jessica);\n    }).catch(error => console.error('Error fetching patient data:', error));\n  }, []);\n  useEffect(() => {\n    if (patient && patient.bloodPressureReadings && chartRef.current) {\n      const labels = patient.bloodPressureReadings.map(entry => entry.year);\n      const readings = patient.bloodPressureReadings.map(entry => entry.value);\n\n      // Create Chart.js instance\n      new Chart(chartRef.current, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: 'Blood Pressure',\n            data: readings,\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 2,\n            fill: false,\n            tension: 0.1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              beginAtZero: false\n            }\n          }\n        }\n      });\n    }\n  }, [patient]);\n  if (!patient) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: \"Loading patient data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Patient Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"patient-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Patient Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", patient.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Age: \", patient.age, \" | Gender: \", patient.gender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"chart-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Blood Pressure Over the Years\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: chartRef,\n            id: \"bpChart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9HkD6LesGj/JgNTqL++xQYturuE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Chart","registerables","jsxDEV","_jsxDEV","register","App","_s","patient","setPatient","chartRef","apiEndpoint","fetch","then","response","ok","Error","statusText","json","data","jessica","find","p","name","catch","error","console","bloodPressureReadings","current","labels","map","entry","year","readings","value","type","datasets","label","borderColor","borderWidth","fill","tension","options","responsive","maintainAspectRatio","scales","y","beginAtZero","className","children","fileName","_jsxFileName","lineNumber","columnNumber","age","gender","ref","id","_c","$RefreshReg$"],"sources":["/Users/rohitnawani/Desktop/PatientDashboardProject/my-patient-dashboard/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\nfunction App() {\n  const [patient, setPatient] = useState(null);\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    // Replace with the actual API endpoint from the Coalition Technologies Patient Data API\n    const apiEndpoint = 'https://api.example.com/patients';\n\n    fetch(apiEndpoint)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`Network response was not ok: ${response.statusText}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        // Filter to get only Jessica Taylor's data\n        const jessica = data.find((p) => p.name === 'Jessica Taylor');\n        setPatient(jessica);\n      })\n      .catch((error) => console.error('Error fetching patient data:', error));\n  }, []);\n\n  useEffect(() => {\n    if (patient && patient.bloodPressureReadings && chartRef.current) {\n      const labels = patient.bloodPressureReadings.map((entry) => entry.year);\n      const readings = patient.bloodPressureReadings.map((entry) => entry.value);\n\n      // Create Chart.js instance\n      new Chart(chartRef.current, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: 'Blood Pressure',\n              data: readings,\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 2,\n              fill: false,\n              tension: 0.1,\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              beginAtZero: false,\n            },\n          },\n        },\n      });\n    }\n  }, [patient]);\n\n  if (!patient) {\n    return <div className=\"App\">Loading patient data...</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>Patient Dashboard</h1>\n      </header>\n\n      <main className=\"app-container\">\n        {/* Patient Information Section */}\n        <section className=\"patient-info\">\n          <h2>Patient Information</h2>\n          <p>Name: {patient.name}</p>\n          <p>\n            Age: {patient.age} | Gender: {patient.gender}\n          </p>\n          {/* You can add more details as required by your design */}\n        </section>\n\n        {/* Blood Pressure Chart Section */}\n        <section className=\"chart-section\">\n          <h2>Blood Pressure Over the Years</h2>\n          <div className=\"chart-wrapper\">\n            <canvas ref={chartRef} id=\"bpChart\"></canvas>\n          </div>\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}