{"ast":null,"code":"var _jsxFileName = \"/Users/rohitnawani/Desktop/PatientDashboardProject/my-patient-dashboard/src/components/MainContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport '../styles/MainContent.css';\nimport { Chart, registerables } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nexport default function MainContent({\n  patient\n}) {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (patient !== null && patient !== void 0 && patient.diagnosisHistory && chartRef.current) {\n      // Example: Create chart using diagnosisHistory or your custom data\n      const ctx = chartRef.current.getContext('2d');\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: patient.diagnosisHistory.map(item => new Date(item.diagnosisDate).getFullYear()),\n          datasets: [{\n            label: 'Systolic',\n            data: patient.diagnosisHistory.map(item => item.systolic),\n            borderColor: '#FF6B6B',\n            borderWidth: 2,\n            fill: false\n          }, {\n            label: 'Diastolic',\n            data: patient.diagnosisHistory.map(item => item.diastolic),\n            borderColor: '#4ECDC4',\n            borderWidth: 2,\n            fill: false\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      });\n    }\n  }, [patient]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"main-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Diagnosis History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef,\n        id: \"bpChart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(MainContent, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = MainContent;\nvar _c;\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","registerables","jsxDEV","_jsxDEV","register","MainContent","patient","_s","chartRef","diagnosisHistory","current","ctx","getContext","type","data","labels","map","item","Date","diagnosisDate","getFullYear","datasets","label","systolic","borderColor","borderWidth","fill","diastolic","options","responsive","maintainAspectRatio","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","id","_c","$RefreshReg$"],"sources":["/Users/rohitnawani/Desktop/PatientDashboardProject/my-patient-dashboard/src/components/MainContent.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport '../styles/MainContent.css';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\n\nexport default function MainContent({ patient }) {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    if (patient?.diagnosisHistory && chartRef.current) {\n      // Example: Create chart using diagnosisHistory or your custom data\n      const ctx = chartRef.current.getContext('2d');\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: patient.diagnosisHistory.map((item) =>\n            new Date(item.diagnosisDate).getFullYear()\n          ),\n          datasets: [\n            {\n              label: 'Systolic',\n              data: patient.diagnosisHistory.map((item) => item.systolic),\n              borderColor: '#FF6B6B',\n              borderWidth: 2,\n              fill: false,\n            },\n            {\n              label: 'Diastolic',\n              data: patient.diagnosisHistory.map((item) => item.diastolic),\n              borderColor: '#4ECDC4',\n              borderWidth: 2,\n              fill: false,\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n        },\n      });\n    }\n  }, [patient]);\n\n  return (\n    <section className=\"main-content\">\n      <h2>Diagnosis History</h2>\n      <div className=\"chart-container\">\n        <canvas ref={chartRef} id=\"bpChart\" />\n      </div>\n      {/* Additional data sections, tables, KPI cards, etc. */}\n    </section>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,2BAA2B;AAClC,SAASC,KAAK,EAAEC,aAAa,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChDH,KAAK,CAACI,QAAQ,CAAC,GAAGH,aAAa,CAAC;AAGhC,eAAe,SAASI,WAAWA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAIQ,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEG,gBAAgB,IAAID,QAAQ,CAACE,OAAO,EAAE;MACjD;MACA,MAAMC,GAAG,GAAGH,QAAQ,CAACE,OAAO,CAACE,UAAU,CAAC,IAAI,CAAC;MAC7C,IAAIZ,KAAK,CAACW,GAAG,EAAE;QACbE,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE;UACJC,MAAM,EAAET,OAAO,CAACG,gBAAgB,CAACO,GAAG,CAAEC,IAAI,IACxC,IAAIC,IAAI,CAACD,IAAI,CAACE,aAAa,CAAC,CAACC,WAAW,CAAC,CAC3C,CAAC;UACDC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,UAAU;YACjBR,IAAI,EAAER,OAAO,CAACG,gBAAgB,CAACO,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACM,QAAQ,CAAC;YAC3DC,WAAW,EAAE,SAAS;YACtBC,WAAW,EAAE,CAAC;YACdC,IAAI,EAAE;UACR,CAAC,EACD;YACEJ,KAAK,EAAE,WAAW;YAClBR,IAAI,EAAER,OAAO,CAACG,gBAAgB,CAACO,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACU,SAAS,CAAC;YAC5DH,WAAW,EAAE,SAAS;YACtBC,WAAW,EAAE,CAAC;YACdC,IAAI,EAAE;UACR,CAAC;QAEL,CAAC;QACDE,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,mBAAmB,EAAE;QACvB;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACxB,OAAO,CAAC,CAAC;EAEb,oBACEH,OAAA;IAAS4B,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC/B7B,OAAA;MAAA6B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BjC,OAAA;MAAK4B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9B7B,OAAA;QAAQkC,GAAG,EAAE7B,QAAS;QAAC8B,EAAE,EAAC;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEd;AAAC7B,EAAA,CA/CuBF,WAAW;AAAAkC,EAAA,GAAXlC,WAAW;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}