{"ast":null,"code":"var _jsxFileName = \"/Users/rohitnawani/Desktop/PatientDashboardProject/my-patient-dashboard/src/components/MainContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Chart, registerables } from 'chart.js';\nimport '../styles/MainContent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nexport default function MainContent({\n  patient\n}) {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n\n  // Sample data if patient data is not yet integrated:\n  const sampleBloodPressure = [{\n    month: 'Oct 2022',\n    systolic: 160,\n    diastolic: 80\n  }, {\n    month: 'Nov 2022',\n    systolic: 155,\n    diastolic: 82\n  }, {\n    month: 'Dec 2022',\n    systolic: 158,\n    diastolic: 79\n  }, {\n    month: 'Jan 2023',\n    systolic: 162,\n    diastolic: 84\n  }, {\n    month: 'Feb 2023',\n    systolic: 159,\n    diastolic: 81\n  }, {\n    month: 'Mar 2023',\n    systolic: 160,\n    diastolic: 78\n  }];\n\n  // Use patient data if available, otherwise fallback to sample data.\n  const bloodPressureData = (patient === null || patient === void 0 ? void 0 : patient.bloodPressureReadings) || sampleBloodPressure;\n  useEffect(() => {\n    // If a chart instance exists, destroy it before creating a new one.\n    if (chartInstanceRef.current) {\n      chartInstanceRef.current.destroy();\n    }\n    if (chartRef.current && bloodPressureData.length) {\n      const labels = bloodPressureData.map(entry => entry.month);\n      const systolicValues = bloodPressureData.map(entry => entry.systolic);\n      const diastolicValues = bloodPressureData.map(entry => entry.diastolic);\n\n      // Create a new Chart instance and store it in the ref.\n      chartInstanceRef.current = new Chart(chartRef.current, {\n        type: 'line',\n        data: {\n          labels,\n          datasets: [{\n            label: 'Systolic',\n            data: systolicValues,\n            borderColor: '#ff6fae',\n            backgroundColor: '#ff6fae',\n            borderWidth: 2,\n            fill: false,\n            tension: 0.4,\n            pointRadius: 4,\n            pointBackgroundColor: '#ffffff',\n            pointBorderColor: '#ff6fae'\n          }, {\n            label: 'Diastolic',\n            data: diastolicValues,\n            borderColor: '#b19cd9',\n            backgroundColor: '#b19cd9',\n            borderWidth: 2,\n            fill: false,\n            tension: 0.4,\n            pointRadius: 4,\n            pointBackgroundColor: '#ffffff',\n            pointBorderColor: '#b19cd9'\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              display: true,\n              labels: {\n                usePointStyle: true\n              }\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: false,\n              grid: {\n                color: '#e0e0e0'\n              }\n            },\n            x: {\n              grid: {\n                display: false\n              }\n            }\n          }\n        }\n      });\n    }\n\n    // Cleanup function to destroy the chart when component unmounts.\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n    };\n  }, [bloodPressureData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diagnosis-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"diagnosis-history-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Diagnosis History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-range\",\n          children: \"Last 6 months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blood-pressure-chart\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: chartRef,\n          id: \"bpChart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(MainContent, \"0kidk2EAizBYKgfY+KQx4ULbe78=\");\n_c = MainContent;\nvar _c;\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","registerables","jsxDEV","_jsxDEV","register","MainContent","patient","_s","chartRef","chartInstanceRef","sampleBloodPressure","month","systolic","diastolic","bloodPressureData","bloodPressureReadings","current","destroy","length","labels","map","entry","systolicValues","diastolicValues","type","data","datasets","label","borderColor","backgroundColor","borderWidth","fill","tension","pointRadius","pointBackgroundColor","pointBorderColor","options","responsive","maintainAspectRatio","plugins","legend","display","usePointStyle","scales","y","beginAtZero","grid","color","x","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","id","_c","$RefreshReg$"],"sources":["/Users/rohitnawani/Desktop/PatientDashboardProject/my-patient-dashboard/src/components/MainContent.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Chart, registerables } from 'chart.js';\nimport '../styles/MainContent.css';\nChart.register(...registerables);\n\nexport default function MainContent({ patient }) {\n  const chartRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n\n  // Sample data if patient data is not yet integrated:\n  const sampleBloodPressure = [\n    { month: 'Oct 2022', systolic: 160, diastolic: 80 },\n    { month: 'Nov 2022', systolic: 155, diastolic: 82 },\n    { month: 'Dec 2022', systolic: 158, diastolic: 79 },\n    { month: 'Jan 2023', systolic: 162, diastolic: 84 },\n    { month: 'Feb 2023', systolic: 159, diastolic: 81 },\n    { month: 'Mar 2023', systolic: 160, diastolic: 78 },\n  ];\n\n  // Use patient data if available, otherwise fallback to sample data.\n  const bloodPressureData = patient?.bloodPressureReadings || sampleBloodPressure;\n\n  useEffect(() => {\n    // If a chart instance exists, destroy it before creating a new one.\n    if (chartInstanceRef.current) {\n      chartInstanceRef.current.destroy();\n    }\n\n    if (chartRef.current && bloodPressureData.length) {\n      const labels = bloodPressureData.map((entry) => entry.month);\n      const systolicValues = bloodPressureData.map((entry) => entry.systolic);\n      const diastolicValues = bloodPressureData.map((entry) => entry.diastolic);\n\n      // Create a new Chart instance and store it in the ref.\n      chartInstanceRef.current = new Chart(chartRef.current, {\n        type: 'line',\n        data: {\n          labels,\n          datasets: [\n            {\n              label: 'Systolic',\n              data: systolicValues,\n              borderColor: '#ff6fae',\n              backgroundColor: '#ff6fae',\n              borderWidth: 2,\n              fill: false,\n              tension: 0.4,\n              pointRadius: 4,\n              pointBackgroundColor: '#ffffff',\n              pointBorderColor: '#ff6fae',\n            },\n            {\n              label: 'Diastolic',\n              data: diastolicValues,\n              borderColor: '#b19cd9',\n              backgroundColor: '#b19cd9',\n              borderWidth: 2,\n              fill: false,\n              tension: 0.4,\n              pointRadius: 4,\n              pointBackgroundColor: '#ffffff',\n              pointBorderColor: '#b19cd9',\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              display: true,\n              labels: {\n                usePointStyle: true,\n              },\n            },\n          },\n          scales: {\n            y: {\n              beginAtZero: false,\n              grid: {\n                color: '#e0e0e0',\n              },\n            },\n            x: {\n              grid: {\n                display: false,\n              },\n            },\n          },\n        },\n      });\n    }\n\n    // Cleanup function to destroy the chart when component unmounts.\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n    };\n  }, [bloodPressureData]);\n\n  return (\n    <div className=\"main-content\">\n      <div className=\"diagnosis-history\">\n        <div className=\"diagnosis-history-header\">\n          <h2>Diagnosis History</h2>\n          <div className=\"history-range\">Last 6 months</div>\n        </div>\n        <div className=\"blood-pressure-chart\">\n          <canvas ref={chartRef} id=\"bpChart\"></canvas>\n        </div>\n        {/* Other content, KPI cards, and diagnostic list */}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}